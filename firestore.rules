
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper function to check for Admin/Gestor role ---
    function isManager() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Gestor'];
    }

    // --- Public access ---
    match /products/{productId} {
      // Anyone can see published products
      allow get: if resource.data.status == 'Publicado';
      allow list: if request.query.get("status") == "Publicado";
      
      // Only managers can create, update, or delete products
      allow write: if isManager();
    }

    // --- User-specific access ---
    match /users/{userId} {
      // A user can create their own account or a manager can create it.
      allow create: if request.auth.uid == userId || isManager();
      
      // A user can read or update their OWN data. Managers can read any user's data.
      allow get, update: if request.auth.uid == userId || isManager();
      
      // Only managers can delete users or list all users.
      allow delete, list: if isManager();
    }

    match /requests/{requestId} {
      // A user can create their own request.
      allow create: if request.auth.uid == request.resource.data.userId;
      
      // A user can read requests where their userId matches.
      // This is the key rule that allows the client-side query to work.
      allow list, get: if request.auth.uid == request.query.get("userId") || isManager();
      
      // Only managers can update or delete requests.
      allow update, delete: if isManager();
    }
    
    match /equipment/{equipmentId} {
       // A user can read equipment where their userId matches.
      allow list, get: if request.auth.uid == request.query.get("userId") || isManager();

      // Only managers can create, update, or delete equipment records.
      allow write: if isManager();
    }

    match /payments/{paymentId} {
       // A user can read payments where their userId matches.
      allow list, get: if request.auth.uid == request.query.get("userId") || isManager();

      // Only managers can create, update, or delete payment records.
      allow write: if isManager();
    }
  }
}
