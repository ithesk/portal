rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Función para verificar si un usuario es un gestor (Admin o Gestor)
    function isManager() {
      // Obtiene el documento del usuario que hace la solicitud y verifica su rol.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Gestor'];
    }

    // Reglas para la colección de usuarios
    match /users/{userId} {
      // Un usuario puede leer y actualizar su propio perfil.
      // Un gestor puede leer cualquier perfil.
      allow get, update: if request.auth.uid == userId || isManager();

      // Un usuario puede crear su propia cuenta.
      // Un gestor puede crear nuevas cuentas (clientes).
      allow create: if request.auth.uid == userId || isManager();

      // Solo los gestores pueden listar o eliminar usuarios.
      allow list, delete: if isManager();
    }

    // Reglas para la colección de productos
    match /products/{productId} {
      // CUALQUIERA puede leer los productos. Esto es para la página pública.
      allow get, list: if true;
      
      // Solo los gestores pueden crear, actualizar o eliminar productos.
      allow write: if isManager();
    }

    // Reglas para la colección de solicitudes de financiamiento
    match /requests/{requestId} {
        // Un gestor puede leer y escribir cualquier solicitud.
        allow read, write: if isManager();
    }

    // Reglas para la colección de equipos
    match /equipment/{equipmentId} {
      // Un cliente puede leer los equipos que le pertenecen (su userId está en el documento).
      // Un gestor puede leer cualquier equipo.
      allow get, list: if resource.data.userId == request.auth.uid || isManager();

      // Solo los gestores pueden crear, actualizar o eliminar equipos.
      allow write: if isManager();
    }

    // Reglas para la colección de pagos
    match /payments/{paymentId} {
      // Un cliente puede leer los pagos que le pertenecen.
      // Un gestor puede leer cualquier pago.
      allow get, list: if resource.data.userId == request.auth.uid || isManager();

      // Solo los gestores pueden crear, actualizar o eliminar pagos.
      allow write: if isManager();
    }
  }
}
