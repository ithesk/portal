rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función para verificar si el usuario es un Admin o Gestor
    function isInternalUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Gestor'];
    }
    
    // === REGLAS PARA CLIENTES ===
    match /users/{userId} {
      // Un usuario puede leer y actualizar su propio perfil.
      allow get, update: if request.auth.uid == userId;
      // Los usuarios internos pueden leer cualquier perfil.
      allow get: if isInternalUser();
    }

    match /requests/{requestId} {
      // Un cliente puede leer una solicitud individual si es suya.
      allow get: if request.auth.uid == resource.data.userId;
      // Un cliente puede LISTAR solicitudes SIEMPRE Y CUANDO filtre por su propio userId.
      allow list: if request.auth.uid == request.query.filters[0].value;
      
      // Los usuarios internos pueden leer cualquier solicitud.
      allow get, list: if isInternalUser();
    }

    match /equipment/{equipmentId} {
      // Un cliente puede leer su equipo individual.
      allow get: if request.auth.uid == resource.data.userId;
      // Un cliente puede LISTAR sus equipos filtrando por su userId.
      allow list: if request.auth.uid == request.query.filters[0].value;
      
      // Los usuarios internos pueden leer cualquier equipo.
      allow get, list: if isInternalUser();
    }
    
    match /payments/{paymentId} {
        // Un cliente puede leer sus pagos individuales y listarlos.
        allow read: if request.auth.uid == resource.data.userId;
    }


    // === REGLAS PARA PÁGINA PÚBLICA ===
    match /products/{productId} {
      // Cualquiera puede leer la lista de productos si están publicados.
      allow list: if resource.data.status == 'Publicado';
      // Cualquiera puede leer un producto individual si está publicado.
      allow get: if resource.data.status == 'Publicado';
    }


    // === REGLAS PARA GESTORES (PORTAL INTERNO) ===
    // Los gestores pueden escribir en cualquier lugar (crear, actualizar, borrar).
    // Esto simplifica las reglas para el portal interno, ya que el acceso de escritura
    // está centralizado a usuarios de confianza.
    match /{collection}/{docId} {
        allow write: if isInternalUser();
    }
  }
}
