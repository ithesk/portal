
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Default Deny ---
    // Deny all reads and writes by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // --- Public Access ---
    // Anyone can read products that are marked as "Publicado"
    match /products/{productId} {
      allow read: if resource.data.status == 'Publicado';
    }
    
    // --- Authenticated User Access ---
    // An authenticated user can only access their OWN documents.
    
    // Users can read/update their own user document
    match /users/{userId} {
      allow get, update: if request.auth != null && request.auth.uid == userId;
      // Allow user creation during registration
      allow create: if request.auth != null;
    }
    
    // Users can read their own equipment/payments based on userId
    match /equipment/{equipmentId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /payments/{paymentId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // --- Internal/Admin Access ---
    // This function checks if the user has an Admin or Gestor role.
    function isInternalUser() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Gestor'];
    }
    
    // Internal users can manage everything.
    match /users/{docId} {
      allow read, write: if isInternalUser();
    }
    
    match /requests/{docId} {
       allow read, write: if isInternalUser();
    }

    match /clients/{docId} {
      allow read, write: if isInternalUser();
    }

    match /equipment/{docId} {
       allow read, write: if isInternalUser();
    }

    match /payments/{docId} {
       allow read, write: if isInternalUser();
    }

    // Admins can manage all products, overriding public rule.
     match /products/{docId} {
      allow write: if isInternalUser();
    }
  }
}
